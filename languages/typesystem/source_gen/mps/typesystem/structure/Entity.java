package mps.typesystem.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.lang.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class Entity extends BaseConcept implements INamedConcept {
  public static final String concept = "mps.typesystem.structure.Entity";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String PROPERTY = "property";

  public Entity(SNode node) {
    super(node);
  }

  public String getName() {
    return this.getProperty(Entity.NAME);
  }

  public void setName(String value) {
    this.setProperty(Entity.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(Entity.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(Entity.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(Entity.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(Entity.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(Entity.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(Entity.VIRTUAL_PACKAGE, value);
  }

  public int getPropertiesCount() {
    return this.getChildCount(Entity.PROPERTY);
  }

  public Iterator<Property> properties() {
    return this.children(Property.class, Entity.PROPERTY);
  }

  public List<Property> getProperties() {
    return this.getChildren(Property.class, Entity.PROPERTY);
  }

  public void addProperty(Property node) {
    this.addChild(Entity.PROPERTY, node);
  }

  public void insertProperty(Property prev, Property node) {
    this.insertChild(prev, Entity.PROPERTY, node);
  }


  public static Entity newInstance(SModel sm, boolean init) {
    return (Entity)SModelUtil_new.instantiateConceptDeclaration("mps.typesystem.structure.Entity", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static Entity newInstance(SModel sm) {
    return Entity.newInstance(sm, false);
  }

}
